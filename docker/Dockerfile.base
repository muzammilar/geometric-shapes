ARG TAG=latest
ARG GO_VERSION=1.19

###############################################
# build protobuf
###############################################
FROM golang:${GO_VERSION}-alpine AS protobuilder
#Versions
ARG GO_VERSION
ARG PROTOC_GEN_GO_VERSION=1.28
ARG PROTOC_GEN_GO_GRPC_VERSION=1.2
# Install modules
RUN apk add --no-cache git protoc make bash
# Install protobuf dev headers (since we don't install from source, they're needed for import "google/...")
# See https://pkgs.alpinelinux.org/contents?branch=edge&name=protobuf-dev&arch=x86_64&repo=main
RUN apk add --no-cache git protobuf protobuf-dev
# Install gRPC go packages
RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@v${PROTOC_GEN_GO_VERSION}
RUN go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v${PROTOC_GEN_GO_GRPC_VERSION}
LABEL Name=geometry/protobuilder Version=${TAG}


###############################################
# build base image with all the services
###############################################
FROM protobuilder AS baseimage
ARG TAG
RUN apk add --no-cache openssl
# gcc needs musl-dev on alpine, alternatively use libc6-compat (not preferred)
RUN apk add --no-cache musl-dev
RUN apk add --no-cache gcc
# make gomodule if it doesn't exist
# RUN make gomodule
# make everything (including certs and protos)
# RUN make
LABEL Name=geometry/base Version=${TAG}
